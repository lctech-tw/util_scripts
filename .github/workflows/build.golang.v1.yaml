name: build.golang.v1
on:
  workflow_call:
    inputs:
      APP_NAME:
        description: "Application name"
        required: true
        type: string
      APP_DOCKER_REPOSITORIES:
        description: "Docker repository URL"
        required: true
        type: string
      GCP_PROJECT:
        description: "Google Cloud Platform project ID"
        required: true
        type: string
      ZMODE:
        description: "Mode name [dev, prod, ...]"
        required: false
        type: string
        default: dev
      GO_VERSION:
        description: "Go version to use"
        required: false
        type: string
        default: "1.23"
      GO_BUILD_PATH:
        description: "Path to the Go main package"
        required: false
        type: string
        default: "./cmd/server"
      SERVER_NAME:
        description: "Server binary name in dockerfile"
        required: false
        type: string
        default: "server"
      DOCKERFILE_PATH:
        description: "Path to Dockerfile"
        required: false
        type: string
        default: ".github/docker/Dockerfile"
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: üîê Obtain GitHub App Installation Access Token
        id: githubAppAuth
        run: |
          TOKEN=$(npx obtain-github-app-installation-access-token ci ${{secrets.GH_APP_CREDENTIALS_TOKEN}})
          echo "::add-mask::$TOKEN" && echo "::set-output name=token::$TOKEN"

      - name: üîß Configure GitHub authentication
        run: git config --global url."https://oauth2:$GITHUB_TOKEN@github.com/lctech-tw".insteadOf "https://github.com/lctech-tw"
        env:
          GITHUB_TOKEN: ${{steps.githubAppAuth.outputs.token}}

      - name: ‚òÅÔ∏è Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{secrets.GCP_SA_KEY_GITHUB_CI}}

      - name: üê≥ Configure Docker authentication
        run: gcloud auth configure-docker $(echo ${{inputs.APP_DOCKER_REPOSITORIES}} | cut -d "/" -f 1) --quiet

      - name: üêπ Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: "./go.mod"
          cache: true

      - name: üî® Build Go application
        run: |
          cd ${{inputs.GO_BUILD_PATH}}
          go mod tidy && go build .

      - name: üèóÔ∏è Set up Docker QEMU
        uses: docker/setup-qemu-action@v3

      - name: üèóÔ∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üè∑Ô∏è Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{inputs.APP_DOCKER_REPOSITORIES}}/${{inputs.APP_NAME}}
          tags: |
            type=raw,value=latest
            type=raw,value=${{github.sha}}
            type=raw,value=${{inputs.ZMODE}}-latest
            type=raw,value=${{inputs.ZMODE}}-${{github.run_number}}
            type=ref,event=branch
            type=ref,event=pr

      - name: üê≥ Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          cache-to: type=gha,mode=max
          cache-from: type=gha
          file: ${{inputs.DOCKERFILE_PATH}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SERVER_NAME=${{inputs.SERVER_NAME}}
            GITHUB_REF_NAME=${{github.sha}}
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
