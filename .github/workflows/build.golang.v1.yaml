name: build.golang.v1
on:
  workflow_call:
    inputs:
      APP_NAME:
        description: "App name"
        required: true
        type: string
      APP_DOCKER_REPOSITORIES:
        description: "Docker repositories name"
        required: true
        type: string
      GCP_PROJECT:
        description: "GCP project"
        required: true
        type: string
      ZMODE:
        description: "Mode name [dev, prod, ...]"
        required: false
        type: string
        default: dev
      GO_VERSION:
        description: "Vseion 棄用 哪次不棄用"
        required: false
        type: string
        default: "1.22"
      GO_BUILD_PATH:
        description: "Build main.go path"
        required: false
        type: string
        default: "./cmd/server"
      SERVER_NAME:
        description: "Server name in dockerfile"
        required: false
        type: string
        default: "server"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: ⚙️ Obtain GitHub App Installation Access Token
        id: githubAppAuth
        run: |
          TOKEN=$(npx obtain-github-app-installation-access-token ci ${{secrets.GH_APP_CREDENTIALS_TOKEN}})
          echo "::add-mask::$TOKEN"
          echo "::set-output name=token::$TOKEN"
      - name: ⚙️ Setting GitHub Auth
        run: git config --global url."https://oauth2:$GITHUB_TOKEN@github.com/lctech-tw".insteadOf "https://github.com/lctech-tw"
        env:
          GITHUB_TOKEN: ${{steps.githubAppAuth.outputs.token}}
      - name: ⚙️ Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{secrets.GCP_SA_KEY_GITHUB_CI}}
      - name: ⚙️ Setting docker auth
        run: gcloud auth configure-docker -q && gcloud auth configure-docker $(echo ${{inputs.APP_DOCKER_REPOSITORIES}}  | cut -d "/" -f 1) -q
      - name: ⚙️ Set up Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: "./go.mod"
      # - name: ⚙️ Setup Golang caches
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.cache/go-build
      #       ~/go/pkg/mod
      #     key: ${{runner.os}}-golang-${{hashFiles('**/go.sum')}}
      #     restore-keys: |
      #       ${{runner.os}}-golang-
      - name: ⚙️ Build Golang
        run: cd ${{inputs.GO_BUILD_PATH}} && go build .
      - name: ⛴ Set up Docker QEMU
        uses: docker/setup-qemu-action@v3
      - name: ⛴ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: ⛴ Docker build / tag / push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          cache-to: type=gha,mode=max
          cache-from: type=gha
          file: .github/docker/Dockerfile
          tags: |
            ${{inputs.APP_DOCKER_REPOSITORIES}}/${{inputs.APP_NAME}}:latest
            ${{inputs.APP_DOCKER_REPOSITORIES}}/${{inputs.APP_NAME}}:${{github.sha}}
            ${{inputs.APP_DOCKER_REPOSITORIES}}/${{inputs.APP_NAME}}:${{inputs.ZMODE}}-latest
            ${{inputs.APP_DOCKER_REPOSITORIES}}/${{inputs.APP_NAME}}:${{inputs.ZMODE}}-${{github.run_number}}
          build-args: |
            SERVER_NAME=${{inputs.SERVER_NAME}}
            GITHUB_REF_NAME=${{github.sha}}
